
apiVersion: v1
kind: Service
metadata:
  name: order-service
  namespace: eda-dev
  labels:
    app: order-service
spec:
  selector:
    app: order-service-container
  ports:
    - name: order-service
      port: 8083
      protocol: TCP
      targetPort: 8083
      nodePort: 30004
  type: NodePort

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: order-service-deployment
  namespace: eda-dev
  labels:
    app: order-service-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: order-service-container
  template:
    metadata:
      labels:
        app: order-service-container
    spec:
      containers:
        - name: order-service-container
          image: aleson/order-service:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 8083
              name: rest
            - containerPort: 5432
              name: postgres
            - containerPort: 9092
              name: kafka
          env:
            - name: DATABASE_HOST
              value: $(POSTGRES_SERVICE_SERVICE_HOST)
            - name: DATABASE_PORT
              value: $(POSTGRES_SERVICE_SERVICE_PORT)
            - name: DATABASE_SCHEMA
              valueFrom:
                secretKeyRef:
                  name: postgres-credentials
                  key: POSTGRES_DB
            - name: DATABASE_LOGIN
              valueFrom:
                secretKeyRef:
                  name: postgres-credentials
                  key: POSTGRES_USER
            - name: DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-credentials
                  key: POSTGRES_PASSWORD
            - name: KAFKA_HOST
              value: $(KAFKA_SERVICE_HOST)
            - name: KAFKA_PORT
              value: $(KAFKA_SERVICE_PORT)
          